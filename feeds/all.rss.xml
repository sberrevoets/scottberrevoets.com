<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Scott Berrevoets</title><link>https://scottberrevoets.com/</link><description></description><lastBuildDate>Wed, 20 Aug 2025 00:00:00 -0700</lastBuildDate><item><title>Managing code deprecations on iOS</title><link>https://scottberrevoets.com/2025/08/20/managing-code-deprecations-on-ios/</link><description>&lt;p&gt;A great manager I once worked with had been at Google for a while and poked fun
at an aspect of its engineering culture: any given service was either deprecated
or not yet ready for adoption. I spend a lot of my time working on mobile
platform development and over …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Wed, 20 Aug 2025 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2025-08-20:/2025/08/20/managing-code-deprecations-on-ios/</guid><category>misc</category></item><item><title>Flywheel of tech debt</title><link>https://scottberrevoets.com/2025/07/02/flywheel-of-tech-debt/</link><description>&lt;p&gt;Tech debt is often compared to financial debt, in that you're borrowing
development time now to pay it off with more development time later. When
"later" comes around, the development time needed to fix the issues introduced
earlier is too high so the new thing is also not built "correctly …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Wed, 02 Jul 2025 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2025-07-02:/2025/07/02/flywheel-of-tech-debt/</guid><category>misc</category></item><item><title>Art of the State</title><link>https://scottberrevoets.com/2025/06/02/art-of-the-state/</link><description>&lt;p&gt;&lt;code&gt;@State&lt;/code&gt; plays a prominent role in any SwiftUI app, and for good reason: app
state is what ultimately drives the UI and how the user interacts with your app.
This has always been true, but SwiftUI embraces this reality with specific APIs
and a unidirectional data flow. UIKit-based apps or …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Mon, 02 Jun 2025 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2025-06-02:/2025/06/02/art-of-the-state/</guid><category>misc</category></item><item><title>Composing a Resume in Markdown</title><link>https://scottberrevoets.com/2025/03/15/composing-a-resume-in-markdown/</link><description>&lt;p&gt;Building a resume in markdown for improved maintainability and portability&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Sat, 15 Mar 2025 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2025-03-15:/2025/03/15/composing-a-resume-in-markdown/</guid><category>misc</category></item><item><title>Incremental Complexity in iOS Development</title><link>https://scottberrevoets.com/2025/02/03/incremental-complexity-in-ios-development/</link><description>&lt;p&gt;A suggestion for redefining what it means to be a senior iOS developer&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Mon, 03 Feb 2025 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2025-02-03:/2025/02/03/incremental-complexity-in-ios-development/</guid><category>misc</category></item><item><title>Looking up words in a dictionary with Neovim</title><link>https://scottberrevoets.com/2024/12/08/looking-up-words-in-a-dictionary-with-neovim/</link><description>&lt;p&gt;Configuring Neovim to enable a quick dictionary lookup for words under the cursor&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Sun, 08 Dec 2024 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2024-12-08:/2024/12/08/looking-up-words-in-a-dictionary-with-neovim/</guid><category>misc</category></item><item><title>Shifting the testing culture: Code coverage</title><link>https://scottberrevoets.com/2024/11/20/shifting-the-testing-culture-code-coverage/</link><description>&lt;p&gt;How we collect, track, and use code coverage data to improve our testing culture&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Wed, 20 Nov 2024 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2024-11-20:/2024/11/20/shifting-the-testing-culture-code-coverage/</guid><category>misc</category></item><item><title>Shifting the testing culture: Infrastructure</title><link>https://scottberrevoets.com/2024/11/19/shifting-the-testing-culture-infrastructure/</link><description>&lt;p&gt;Infrastructure changes we made to optimize the ergonomics and developer experience of writing tests.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Tue, 19 Nov 2024 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2024-11-19:/2024/11/19/shifting-the-testing-culture-infrastructure/</guid><category>misc</category></item><item><title>Shifting the testing culture: Motivation</title><link>https://scottberrevoets.com/2024/11/18/shifting-the-testing-culture-motivation/</link><description>&lt;p&gt;Motivation for investing in automated testing and the benefits and drawbacks we've experienced at Lyft&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Mon, 18 Nov 2024 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2024-11-18:/2024/11/18/shifting-the-testing-culture-motivation/</guid><category>misc</category></item><item><title>Migration strategies in large codebases</title><link>https://scottberrevoets.com/2022/11/15/migration-strategies-in-large-codebases/</link><description>&lt;p&gt;Strategies we employ in completing migrations in our mobile codebases&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Tue, 15 Nov 2022 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2022-11-15:/2022/11/15/migration-strategies-in-large-codebases/</guid><category>misc</category></item><item><title>Human factors in choosing technologies</title><link>https://scottberrevoets.com/2022/09/28/human-factors-in-choosing-technologies/</link><description>&lt;p&gt;Discussion on what human factors to consider when choosing to adopt a new technology&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Wed, 28 Sep 2022 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2022-09-28:/2022/09/28/human-factors-in-choosing-technologies/</guid><category>misc</category></item><item><title>Third-party libraries are no party at all</title><link>https://scottberrevoets.com/2022/07/15/third-party-libraries-are-no-party-at-all/</link><description>&lt;p&gt;Details on how we evaluate whether to add new third-party libraries&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Fri, 15 Jul 2022 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2022-07-15:/2022/07/15/third-party-libraries-are-no-party-at-all/</guid><category>misc</category></item><item><title>iOS Architecture at Lyft</title><link>https://scottberrevoets.com/2021/10/14/ios-architecture-at-lyft/</link><description>&lt;p&gt;Discussion on the different architectural components of Lyft's iOS apps&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Thu, 14 Oct 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2021-10-14:/2021/10/14/ios-architecture-at-lyft/</guid><category>misc</category></item><item><title>Re-binding self: the debugger's break(ing) point</title><link>https://scottberrevoets.com/2018/08/08/re-binding-self-the-debuggers-breaking-point/</link><description>&lt;p&gt;Explanation of how nice syntax for re-binding self breaks the debugger&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Wed, 08 Aug 2018 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2018-08-08:/2018/08/08/re-binding-self-the-debuggers-breaking-point/</guid><category>misc</category></item><item><title>Using Interface Builder at Lyft</title><link>https://scottberrevoets.com/2017/03/06/using-interface-builder-at-lyft/</link><description>&lt;p&gt;An overview of how we use Interface Builder to build the Lyft app&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Mon, 06 Mar 2017 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2017-03-06:/2017/03/06/using-interface-builder-at-lyft/</guid><category>misc</category></item><item><title>Keeping the Lyft iOS App Accessible</title><link>https://scottberrevoets.com/2017/01/18/keeping-the-lyft-ios-app-accessible/</link><description>&lt;p&gt;Explanation on some strategies in how Lyft keeps its iOS app accessible&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Wed, 18 Jan 2017 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2017-01-18:/2017/01/18/keeping-the-lyft-ios-app-accessible/</guid><category>misc</category></item><item><title>Silencing NSLog</title><link>https://scottberrevoets.com/2016/08/01/silencing-nslog/</link><description>&lt;p&gt;Details a way to clean up a noisy Xcode console&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Mon, 01 Aug 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2016-08-01:/2016/08/01/silencing-nslog/</guid><category>misc</category></item><item><title>Outlets: strong! or weak?</title><link>https://scottberrevoets.com/2016/03/21/outlets-strong-or-weak/</link><description>&lt;p&gt;A quick overview of some best practices when creating IBOutlets&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Mon, 21 Mar 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2016-03-21:/2016/03/21/outlets-strong-or-weak/</guid><category>misc</category></item><item><title>@objc class prefixes fixed in Xcode 7 beta 4</title><link>https://scottberrevoets.com/2015/07/23/objc-class-prefixes-fixed-in-xcode-7-beta-4/</link><description>&lt;p&gt;Back in December I &lt;a href="/2014/12/15/at-objc-creates-a-wrong-class-name-in-objective-c/"&gt;wrote&lt;/a&gt; about what I thought was a bug in the Swift compiler that would expose the wrong class name for a Swift class in Objective-C. I then later &lt;a href="https://devforums.apple.com/message/1072175#1072175"&gt;found out&lt;/a&gt; everything worked as intended and I had just misunderstood what &lt;code&gt;@objc()&lt;/code&gt; exactly did. Apparently it was …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Thu, 23 Jul 2015 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2015-07-23:/2015/07/23/objc-class-prefixes-fixed-in-xcode-7-beta-4/</guid><category>misc</category></item><item><title>The power of UIStackView</title><link>https://scottberrevoets.com/2015/06/13/the-power-of-uistackview/</link><description>&lt;p&gt;I was in the audience for "Implementing UI Designs in Interface Builder" at WWDC, where Apple touted &lt;code&gt;UIStackView&lt;/code&gt; as a new, better way to lay out your views that in a lot of cases didn't require Auto Layout.&lt;/p&gt;
&lt;p&gt;While the presentation looked good, I wasn't quite sure this solved a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Sat, 13 Jun 2015 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2015-06-13:/2015/06/13/the-power-of-uistackview/</guid><category>misc</category></item><item><title>@objc creates a wrong class name in Objective-C</title><link>https://scottberrevoets.com/2014/12/15/objc-creates-a-wrong-class-name-in-objective-c/</link><description>&lt;p&gt;A few months ago, I decided I'd get started porting &lt;a href="https://github.com/sberrevoets/SDCAlertView"&gt;SDCAlertView&lt;/a&gt; to Swift, but I was only a few minutes in until I ran into a problem I had no idea how to solve: I couldn't get my class names right in both Swift and Objective-C. Even though there are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Mon, 15 Dec 2014 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2014-12-15:/2014/12/15/objc-creates-a-wrong-class-name-in-objective-c/</guid><category>misc</category></item><item><title>Dev-only iPhones</title><link>https://scottberrevoets.com/2014/10/20/dev-only-iphones/</link><description>&lt;p&gt;With today's release of iOS 8.1, most app developers are looking at 4 significantly different iOS versions they will be supporting: iOS 7.0., iOS 7.1, iOS 8.0, and iOS 8.1. Factoring in the number of devices (iPhone 4S, iPhone 5, iPhone 5s, iPhone 6, and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Mon, 20 Oct 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2014-10-20:/2014/10/20/dev-only-iphones/</guid><category>misc</category></item><item><title>UIMenuController and the responder chain</title><link>https://scottberrevoets.com/2014/09/15/uimenucontroller-and-the-responder-chain/</link><description>&lt;p&gt;The responder chain is a very important paradigm in the world of iOS development, and not terribly hard to understand. Dozens of articles have been written about it, and with some examples, the concept of finding a responder to a certain event by traversing a chain of potential responders is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Mon, 15 Sep 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2014-09-15:/2014/09/15/uimenucontroller-and-the-responder-chain/</guid><category>misc</category></item><item><title>Xcode &amp; Objective-C Oddities</title><link>https://scottberrevoets.com/2014/08/10/xcode-objective-c-oddities/</link><description>&lt;p&gt;Any developer that has worked with Xcode to write a little more than just "Hello, World" knows that Xcode and Objective-C have their quirks. Chances are you have heard of &lt;a href="https://twitter.com/TextFromXcode"&gt;@TextFromXcode&lt;/a&gt;, the Twitter handle that portrays Xcode as a high school bully in fake text conversations like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Xcode Bully" src="https://cl.ly/image/0I2P191S0Q2k/20140227.PNG"&gt;&lt;/p&gt;
&lt;p&gt;But it's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Sun, 10 Aug 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2014-08-10:/2014/08/10/xcode-objective-c-oddities/</guid><category>misc</category></item><item><title>Objective-C prefixes: a thing of the past?</title><link>https://scottberrevoets.com/2014/07/25/objective-c-prefixes-a-thing-of-the-past/</link><description>&lt;p&gt;This past week, there was, again, a lot to do about Objective-C and prefixing. To most iOS developers, the story sounds familiar: one camp is strongly in favor, another camps is strongly against, and a third camp couldn't really care less.&lt;/p&gt;
&lt;p&gt;Unless I'm unaware of any other platforms where the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Berrevoets</dc:creator><pubDate>Fri, 25 Jul 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:scottberrevoets.com,2014-07-25:/2014/07/25/objective-c-prefixes-a-thing-of-the-past/</guid><category>misc</category></item></channel></rss>